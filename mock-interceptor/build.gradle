plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion application.compileSdk
    buildToolsVersion application.buildTools

    defaultConfig {
        minSdkVersion application.minSdk
        targetSdkVersion application.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    flavorDimensions "dim"
    productFlavors {
        noclient {
            dimension = "dim"
        }
        client {
            dimension = "dim"
        }
    }
}

task sourcesNoOpJar(type: Jar) {
    group = "publish"
    from android.sourceSets.main.kotlin.srcDirs
    archiveClassifier = 'sources'
}

task sourcesJar(type: Jar) {
    group = "publish"
    from android.sourceSets.client.kotlin.srcDirs
    archiveClassifier = 'sources'
}

task javadocNoOp(type: Javadoc) {
    group = "publish"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadoc(type: Javadoc) {
    group = "publish"
    source = android.sourceSets.client.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocNoOpJar(type: Jar, dependsOn: javadocNoOp) {
    group = "publish"
    archiveClassifier = 'javadoc'
    from javadocNoOp.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    group = "publish"
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

apply from: "$rootDir/tools/publish.gradle"

dependencies {
    implementation dependency_versions.kotlin
    implementation dependency_versions.coreKtx
    implementation dependency_versions.appCompat
    implementation dependency_versions.okhttp
    implementation dependency_versions.retrofit
    implementation dependency_versions.coroutines

    api dependency_versions.room
    api dependency_versions.roomktx
    kapt dependency_versions.roomProcessor
}